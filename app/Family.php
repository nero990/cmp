<?php

namespace App;

use App\Events\UserCreated;
use Illuminate\Database\Eloquent\Model;
use OwenIt\Auditing\Auditable;
use OwenIt\Auditing\Contracts\Auditable as AuditableContract;

class Family extends Model implements AuditableContract
{
    use Auditable;

    protected $fillable = [
        'name', 'registration_number', 'type', 'number_of_children', 'state_id', 'address', 'card_status', 'bcc_zone_id'
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        
        static::created(function ($family) {
            event(new UserCreated($family));
        });

    }

    public function bcc_zone() {
        return $this->belongsTo(BccZone::class);
    }

    public function members() {
        return $this->hasMany(Member::class);
    }

    public function user() {
        return $this->morphOne(User::class, 'person');
    }

    public function getUsernameAttribute() {
        return $this->attributes['registration_number'];
    }

    public function getTypeTextAttribute() {
        switch ($this->attributes['type']) {
            case "1" :
                return "Family";
            case "2" :
                return "Individual";
            default:
                return "";
        }
    }

    public function getCardStatusTextAttribute() {
        switch ($this->attributes['card_status']) {
            case "0" :
                return "Not Paid";
            case "1" :
                return "Paid";
            case "2" :
                return "Collected";
            default:
                return "";
        }
    }
}
